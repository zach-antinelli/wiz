# ENIConfig CR for us-west-2a
---
apiVersion: crd.k8s.amazonaws.com/v1alpha1
kind: ENIConfig
metadata:
  name: us-west-2a
spec:
  subnet: ${subnet_id_us_west_2a}
  securityGroups:
    - ${APP_SG_ID}

# ENIConfig CR for us-west-2b
---
apiVersion: crd.k8s.amazonaws.com/v1alpha1
kind: ENIConfig
metadata:
  name: us-west-2b
spec:
  subnet: ${subnet_id_us_west_2b}
  securityGroups:
    - ${APP_SG_ID}

# ENIConfig CR for us-west-2c
---
apiVersion: crd.k8s.amazonaws.com/v1alpha1
kind: ENIConfig
metadata:
  name: us-west-2c
spec:
  subnet: ${subnet_id_us_west_2c}
  securityGroups:
    - ${APP_SG_ID}

# Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}
  labels:
    app: ${APP_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${APP_NAME}
  template:
    metadata:
      annotations:
        vpc.amazonaws.com/pod-eni: "true"
        vpc.amazonaws.com/pod-eni-sg: "${APP_SG_ID}"
      labels:
        app: ${APP_NAME}
    spec:
      containers:
        - name: ${APP_NAME}
          image: ${APP_IMAGE}
          ports:
            - containerPort: ${CONTAINER_PORT}

# Service
---
apiVersion: v1
kind: Service
metadata:
  name: ${APP_NAME}
  labels:
    app: ${APP_NAME}
spec:
  ports:
    - port: 80
      targetPort: ${CONTAINER_PORT}
  selector:
    app: ${APP_NAME}
  type: NodePort

# Ingress with config for ALB creation and SSL
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ${APP_NAME}
  labels:
    app: ${APP_NAME}
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/subnets: ${subnet_id_us_west_2a},${subnet_id_us_west_2b},${subnet_id_us_west_2c}
    alb.ingress.kubernetes.io/security-groups: ${APP_SG_ID}
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/certificate-arn: ${APP_CERT_ARN}
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ${APP_NAME}
                port:
                  number: 80
name: Deploy Infrastructure - Test

on:
  push:
    branches:
      - main
    paths:
      - "tech-exercise/test/**"
  workflow_dispatch:

jobs:
  apply:
    name: apply
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ vars.AWS_REGION }}
      TF_WORKING_DIR: tech-exercise/test

    permissions:
      contents: read
      actions: write

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4

      - name: configure
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: state download
        uses: badgerhobbs/terraform-state@v2
        with:
          operation: download
          location: artifact
          directory: ${{ env.TF_WORKING_DIR }}
          github_token: ${{ secrets.GH_ACCESS_TOKEN }}
        continue-on-error: true

      - name: init
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform init

      - name: format
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform fmt -check
        continue-on-error: true

      - name: validate
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform validate

      - name: plan
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: terraform plan -out=tfplan

      - name: apply
        working-directory: ${{ env.TF_WORKING_DIR }}
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

      - name: output
        if: github.ref == 'refs/heads/main' && success()
        working-directory: ${{ env.TF_WORKING_DIR }}
        run: |
          echo "### Terraform Outputs" > terraform_output.md
          echo '```' >> terraform_output.md
          terraform output -json | jq -r 'to_entries | .[] | "\(.key) = \(.value.value)"' >> terraform_output.md
          echo '```' >> terraform_output.md

      - name: output upload
        if: github.ref == 'refs/heads/main' && success()
        uses: actions/upload-artifact@v4
        with:
          name: terraform-apply-output-${{ github.run_id }}
          path: ${{ env.TF_WORKING_DIR }}/terraform_output.md
          retention-days: 30

      - name: state upload
        uses: badgerhobbs/terraform-state@v2
        if: always()
        with:
          operation: upload
          location: artifact
          directory: ${{ env.TF_WORKING_DIR }}
          github_token: ${{ secrets.GH_ACCESS_TOKEN }}

name: Destroy Infrastructure

on:
  workflow_dispatch:

jobs:
  destroy:
    name: destroy
    runs-on: ubuntu-latest

    steps:
      - name: checkout repo
        uses: actions/checkout@v4

      - name: setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.4

      - name: configure aws
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: ensure working directory exists
        run: mkdir -p ${{ vars.TF_WORKING_DIR }}

      - name: check state
        id: check-state
        working-directory: ${{ vars.TF_WORKING_DIR }}
        run: |
            REPO="${{ github.repository }}"
            TOKEN="${{ secrets.GH_ACCESS_TOKEN }}"
            ARTIFACT_URI="https://api.github.com/repos/$REPO/actions/artifacts"
            RESPONSE=$(curl -H "Authorization: token $TOKEN" -s $ARTIFACT_URI | jq -r '.artifacts[]')

            if [[ $(echo "$RESPONSE" | grep -c "Terraform State") -gt 0 ]]; then
              echo "state_exists=true" >> $GITHUB_OUTPUT
            else
              echo "state_exists=false" >> $GITHUB_OUTPUT
              echo "No previous state file found, assuming first run"
            fi

      - name: download state
        uses: badgerhobbs/terraform-state@v2
        if: steps.check-state.outputs.state_exists == 'true'
        with:
          operation: download
          location: artifact
          directory: ${{ vars.TF_WORKING_DIR }}
          github_token: ${{ secrets.GH_ACCESS_TOKEN }}
          encryption_key: ${{ secrets.TF_STATE_ENCRYPTION_KEY }}

      - name: init
        working-directory: ${{ vars.TF_WORKING_DIR }}
        run: terraform init

      - name: format
        working-directory: ${{ vars.TF_WORKING_DIR }}
        run: terraform fmt

      - name: validate
        working-directory: ${{ vars.TF_WORKING_DIR }}
        run: terraform validate

      - name: plan
        working-directory: ${{ vars.TF_WORKING_DIR }}
        run: |
          terraform plan -destroy -out=tfplan \
            -var="app_name=${{ vars.APP_NAME }}" \
            -var="region=${{ vars.AWS_REGION }}" \
            -var="key_name=${{ secrets.AWS_SSH_KEY_NAME }}" \
            -var="db_password=${{ secrets.AWS_DB_PASSWORD }}" \
            -var="bucket_name=${{ secrets.AWS_S3_BUCKET_NAME }}" \
            -var="management_ip_cidr=${{ secrets.AWS_MANAGEMENT_IP_CIDR }}"

      - name: destroy
        working-directory: ${{ vars.TF_WORKING_DIR }}
        run: terraform apply -auto-approve tfplan

      - name: upload state
        uses: badgerhobbs/terraform-state@v2
        if: always()
        with:
          operation: upload
          location: artifact
          directory: ${{ vars.TF_WORKING_DIR }}
          github_token: ${{ secrets.GH_ACCESS_TOKEN }}
          encryption_key: ${{ secrets.TF_STATE_ENCRYPTION_KEY }}